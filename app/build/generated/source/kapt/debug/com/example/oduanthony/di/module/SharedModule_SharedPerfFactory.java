// Generated by Dagger (https://dagger.dev).
package com.example.oduanthony.di.module;

import android.content.Context;
import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharedModule_SharedPerfFactory implements Factory<SharedPreferences> {
  private final SharedModule module;

  private final Provider<Context> contextProvider;

  public SharedModule_SharedPerfFactory(SharedModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public SharedPreferences get() {
    return sharedPerf(module, contextProvider.get());
  }

  public static SharedModule_SharedPerfFactory create(SharedModule module,
      Provider<Context> contextProvider) {
    return new SharedModule_SharedPerfFactory(module, contextProvider);
  }

  public static SharedPreferences sharedPerf(SharedModule instance, Context context) {
    return Preconditions.checkNotNull(instance.sharedPerf(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
