// Generated by Dagger (https://dagger.dev).
package com.example.oduanthony.screens.filter;

import com.example.oduanthony.DownloadProgress;
import com.example.oduanthony.repository.FilterRepo;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FilterViewModel_Factory implements Factory<FilterViewModel> {
  private final Provider<FilterRepo> filterRepositoryProvider;

  private final Provider<DownloadProgress> dialogProvider;

  public FilterViewModel_Factory(Provider<FilterRepo> filterRepositoryProvider,
      Provider<DownloadProgress> dialogProvider) {
    this.filterRepositoryProvider = filterRepositoryProvider;
    this.dialogProvider = dialogProvider;
  }

  @Override
  public FilterViewModel get() {
    return new FilterViewModel(filterRepositoryProvider.get(), dialogProvider.get());
  }

  public static FilterViewModel_Factory create(Provider<FilterRepo> filterRepositoryProvider,
      Provider<DownloadProgress> dialogProvider) {
    return new FilterViewModel_Factory(filterRepositoryProvider, dialogProvider);
  }

  public static FilterViewModel newInstance(FilterRepo filterRepository, DownloadProgress dialog) {
    return new FilterViewModel(filterRepository, dialog);
  }
}
